name: Test and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'               # Triggert bei Tags wie v1.2.3
  pull_request:
    branches:
      - main

jobs:
  test:
    name: ðŸ§ª Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install package in editable mode + test deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-django

      - name: Run pytest
        run: python3 -m pytest --maxfail=1 --disable-warnings -q

  publish:
    name: ðŸš€ Publish to PyPI
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (with history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from Git tag
        id: extract_version
        run: |
          # GITHUB_REF is like "refs/tags/v1.2.3"
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Python for version sync
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install sync-script deps
        run: |
          python -m pip install --upgrade pip
          pip install tomli-w

      - name: Sync version into pyproject.toml
        run: python scripts/sync_version.py "${{ steps.extract_version.outputs.version }}"

      - name: Show updated version
        run: grep -E '^version' pyproject.toml

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build distributions
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
